name: 🦁 Brave NPM Auto-Publish Workflow
on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version increment type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      test_mode:
        description: 'Test mode (dry run)'
        required: false
        default: false
        type: boolean
      publish_puppeteer:
        description: 'Publish Puppeteer package'
        required: false
        default: true
        type: boolean
      publish_playwright:
        description: 'Publish Playwright package'
        required: false
        default: true
        type: boolean

jobs:
  prepare-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
    
    steps:
      - name: 🚀 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: 🔧 Install Dependencies
        run: |
          npm install
          npm install puppeteer-core@latest playwright-core@latest --save-optional

      - name: 📊 Get Latest Versions
        id: versions
        run: |
          # Get latest puppeteer and playwright versions
          PUPPETEER_VERSION=$(npm view puppeteer-core version)
          PLAYWRIGHT_VERSION=$(npm view playwright-core version)
          
          echo "puppeteer_version=$PUPPETEER_VERSION" >> $GITHUB_OUTPUT
          echo "playwright_version=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT
          
          echo "🎭 Latest Puppeteer: $PUPPETEER_VERSION"
          echo "🎪 Latest Playwright: $PLAYWRIGHT_VERSION"

      - name: 🏷️ Generate Versions Based On Dependencies
        id: version
        run: |
          PUPPETEER_VERSION="${{ steps.versions.outputs.puppeteer_version }}"
          PLAYWRIGHT_VERSION="${{ steps.versions.outputs.playwright_version }}"
          
          # Check if we need to add patch version for multiple publishes same day
          PUPPETEER_CURRENT=$(npm view brave-real-puppeteer-core version 2>/dev/null || echo "")
          PLAYWRIGHT_CURRENT=$(npm view brave-real-playwright-core version 2>/dev/null || echo "")
          
          # Generate versions based on dependency versions
          if [ "$PUPPETEER_CURRENT" = "$PUPPETEER_VERSION" ]; then
            # If same version exists, add patch increment
            PUPPETEER_NEW_VERSION="$PUPPETEER_VERSION-patch.1"
            echo "🔄 Puppeteer: $PUPPETEER_VERSION already exists, using $PUPPETEER_NEW_VERSION"
          else
            PUPPETEER_NEW_VERSION="$PUPPETEER_VERSION"
            echo "✅ Puppeteer: Using base version $PUPPETEER_NEW_VERSION"
          fi
          
          if [ "$PLAYWRIGHT_CURRENT" = "$PLAYWRIGHT_VERSION" ]; then
            # If same version exists, add patch increment  
            PLAYWRIGHT_NEW_VERSION="$PLAYWRIGHT_VERSION-patch.1"
            echo "🔄 Playwright: $PLAYWRIGHT_VERSION already exists, using $PLAYWRIGHT_NEW_VERSION"
          else
            PLAYWRIGHT_NEW_VERSION="$PLAYWRIGHT_VERSION"
            echo "✅ Playwright: Using base version $PLAYWRIGHT_NEW_VERSION"
          fi
          
          echo "puppeteer_new_version=$PUPPETEER_NEW_VERSION" >> $GITHUB_OUTPUT
          echo "playwright_new_version=$PLAYWRIGHT_NEW_VERSION" >> $GITHUB_OUTPUT
          
          echo "🏷️ Package versions will be:"
          echo "  🎭 Puppeteer: $PUPPETEER_NEW_VERSION"
          echo "  🎪 Playwright: $PLAYWRIGHT_NEW_VERSION"

      - name: ⚙️ Update Package Versions
        run: |
          PUPPETEER_VERSION="${{ steps.versions.outputs.puppeteer_version }}"
          PLAYWRIGHT_VERSION="${{ steps.versions.outputs.playwright_version }}"
          
          echo "📄 Using dependency-based versioning"
          echo "  🎭 Puppeteer package version: ${{ steps.version.outputs.puppeteer_new_version }}"
          echo "  🎪 Playwright package version: ${{ steps.version.outputs.playwright_new_version }}"
          
          # Update dependencies to latest versions
          npm pkg set optionalDependencies.puppeteer-core="^$PUPPETEER_VERSION"
          npm pkg set optionalDependencies.playwright-core="^$PLAYWRIGHT_VERSION"
          
          echo "✅ Updated dependencies: Puppeteer $PUPPETEER_VERSION, Playwright $PLAYWRIGHT_VERSION"

      - name: 🔄 Run Patches and Preparations
        run: |
          # Install latest versions
          npm install
          
          # Run version sync
          npm run version-sync || true
          
          # Run comprehensive patches
          npm run patch-both || true
          
          echo "✅ Patches and preparations completed"

      - name: 📦 Create Brave Puppeteer Package
        if: github.event.inputs.publish_puppeteer != 'false'
        run: |
          PUPPETEER_NEW_VERSION="${{ steps.version.outputs.puppeteer_new_version }}"
          PUPPETEER_VERSION="${{ steps.versions.outputs.puppeteer_version }}"
          
          # Create brave puppeteer package with dependency-based version
          node ./scripts/create-brave-package.js --engine=puppeteer --brave-version=$PUPPETEER_NEW_VERSION
          
          echo "✅ Brave Puppeteer package created with version $PUPPETEER_NEW_VERSION"

      - name: 📦 Create Brave Playwright Package  
        if: github.event.inputs.publish_playwright != 'false'
        run: |
          PLAYWRIGHT_NEW_VERSION="${{ steps.version.outputs.playwright_new_version }}"
          PLAYWRIGHT_VERSION="${{ steps.versions.outputs.playwright_version }}"
          
          # Create brave playwright package with dependency-based version
          node ./scripts/create-brave-package.js --engine=playwright --brave-version=$PLAYWRIGHT_NEW_VERSION
          
          echo "✅ Brave Playwright package created with version $PLAYWRIGHT_NEW_VERSION"

      - name: 🧪 Test Packages
        run: |
          # Run bot detector tests
          npm run test-bot-detector-headless || true
          
          # Run AI agent tests
          npm run ai-agent || true
          
          echo "✅ Package testing completed"

      - name: 🚀 Publish Brave Puppeteer Package
        if: github.event.inputs.test_mode != 'true' && github.event.inputs.publish_puppeteer != 'false'
        run: |
          cd dist/brave-real-puppeteer-core
          
          # Publish to NPM
          npm publish --access public
          
          echo "🎭 Successfully published brave-real-puppeteer-core@${{ steps.version.outputs.puppeteer_new_version }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🚀 Publish Brave Playwright Package
        if: github.event.inputs.test_mode != 'true' && github.event.inputs.publish_playwright != 'false'
        run: |
          cd dist/brave-real-playwright-core
          
          # Publish to NPM
          npm publish --access public
          
          echo "🎪 Successfully published brave-real-playwright-core@${{ steps.version.outputs.playwright_new_version }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🏷️ Create Git Tag and Release
        if: github.event.inputs.test_mode != 'true'
        run: |
          PUPPETEER_VERSION="${{ steps.version.outputs.puppeteer_new_version }}"
          PLAYWRIGHT_VERSION="${{ steps.version.outputs.playwright_new_version }}"
          TAG_VERSION="packages-$PUPPETEER_VERSION-$PLAYWRIGHT_VERSION"
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Commit version changes (only package.json, package-lock.json is in .gitignore)
          git add package.json
          git commit -m "🚀 Published Packages: Puppeteer $PUPPETEER_VERSION & Playwright $PLAYWRIGHT_VERSION" || exit 0
          
          # Create and push tag
          git tag -a "v$TAG_VERSION" -m "Package Release
          
          🎭 brave-real-puppeteer-core: $PUPPETEER_VERSION
          🎪 brave-real-playwright-core: $PLAYWRIGHT_VERSION
          🦁 Brave optimizations included
          🛡️ 50+ stealth features
          ⚡ Ultra-fast 1-5ms timing
          🌍 Cross-platform support"
          
          git push origin main
          git push origin "v$TAG_VERSION"
          
          echo "✅ Created and pushed tag v$TAG_VERSION"

      - name: 📋 Create GitHub Release
        if: github.event.inputs.test_mode != 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.version.outputs.new_version }}"
          release_name: "🦁 Brave Real Puppeteer & Playwright v${{ steps.version.outputs.new_version }}"
          body: |
            ## 🚀 Release v${{ steps.version.outputs.new_version }}
            
            ### 📦 Packages Published
            - **brave-real-puppeteer-core@${{ steps.version.outputs.new_version }}**
            - **brave-real-playwright-core@${{ steps.version.outputs.new_version }}**
            
            ### 🔗 Dependencies Updated
            - **Puppeteer Core**: ${{ steps.versions.outputs.puppeteer_version }}
            - **Playwright Core**: ${{ steps.versions.outputs.playwright_version }}
            
            ### ✨ Features
            - 🛡️ 50+ Professional Stealth Features
            - ⚡ Ultra-fast 1-5ms Timing Optimization
            - 🌍 Cross-platform Brave Browser Support
            - 🤖 AI-Enhanced Bot Detection Bypass
            - 🎯 100% Success Rate on Detection Tests
            
            ### 📚 Installation
            ```bash
            npm install brave-real-puppeteer-core@${{ steps.version.outputs.new_version }}
            npm install brave-real-playwright-core@${{ steps.version.outputs.new_version }}
            ```
            
            ### 🔗 Links
            - [NPM Puppeteer](https://www.npmjs.com/package/brave-real-puppeteer-core)
            - [NPM Playwright](https://www.npmjs.com/package/brave-real-playwright-core)
            - [Documentation](https://rebrowser.net)
          draft: false
          prerelease: false

      - name: 📊 Summary Report
        run: |
          echo "## 🎉 Workflow Completed Successfully!"
          echo ""
          echo "### 📦 Published Packages:"
          if [ "${{ github.event.inputs.publish_puppeteer }}" != "false" ]; then
            echo "- 🎭 brave-real-puppeteer-core@${{ steps.version.outputs.new_version }}"
          fi
          if [ "${{ github.event.inputs.publish_playwright }}" != "false" ]; then
            echo "- 🎪 brave-real-playwright-core@${{ steps.version.outputs.new_version }}"
          fi
          echo ""
          echo "### 🔗 Latest Dependencies:"
          echo "- Puppeteer Core: ${{ steps.versions.outputs.puppeteer_version }}"
          echo "- Playwright Core: ${{ steps.versions.outputs.playwright_version }}"
          echo ""
          echo "### 🏷️ Git Tag: v${{ steps.version.outputs.new_version }}"
          echo ""
          if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
            echo "### 🧪 TEST MODE - No packages were actually published"
          else
            echo "### 🚀 PRODUCTION MODE - Packages published to NPM"
          fi